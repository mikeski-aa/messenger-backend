// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model user {
  id  Int @id @default(autoincrement())
  email String @unique
  username String @unique @db.VarChar(15)
  hash String @db.VarChar(255)
  friends user[] @relation("friends")
  friendOf user[] @relation("friends")
  requests reqstatus[] @relation("ownerRequests")
  targetRequests reqstatus[] @relation("targetRequests")


  status String @default("online")
}

model reqstatus {
  id Int @id @default(autoincrement())
  owner user @relation("ownerRequests", fields: [ownerId], references: [id])
  ownerId Int
  target user @relation("targetRequests", fields: [targetId], references: [id])
  targetId Int
  status reqstat
  reqdate DateTime @default(now())
}

enum reqstat {
  pending
  
}

model converastion {
  id Int @id @default(autoincrement())
  participants Int[] @unique
  message message[]
}

model message {
  id Int @id @default(autoincrement())
  convo converastion @relation(fields: [convoId], references: [id])
  convoId Int 
  author Int
  message String
  timestamp DateTime @default(now())
}